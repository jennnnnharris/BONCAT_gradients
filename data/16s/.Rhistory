#basic
library(tidyverse)
library(vegan)
#Phyloseq
library(phyloseq)
#for filtering no reads. no samples:
library(MicEco)
#for filtering no reads. no samples:
install.packages("MicEco")
library(MicEco)
#basic
library(tidyverse)
library(vegan)
#Phyloseq
library(phyloseq)
#for filtering no reads. no samples:
#install.packages("MicEco")
library(MicEco)
#ANCOM
library(ANCOMBC)
# venn diagrams
library(grid)
library(ggvenn)
#heatmaps
library(Heatplus)
library(gplots)
#tree
library(ape)
library(ggtree)
#####Import data & rarefy ###########
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data/16s")
taxon <- read.table("taxonomy.txt", sep="\t", header=T, row.names=1)
asvs.raw <- read.table("feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- read.delim("metadata.txt", sep="\t", header = T, check.names=FALSE)
## Transpose ASVS table ##
asvs.t <- t(asvs.raw)
## order metadata
metadat<-metadat[order(metadat$SampleID),]
## order asvs table
asvs.t<-asvs.t[order(row.names(asvs.t)),]
## Determine minimum available reads per sample ##
min.s<-min(rowSums(asvs.t))
min.s
### Rarefy to obtain even numbers of reads by sample ###
set.seed(336)
asvs.r<-rrarefy(asvs.t, min.s)
dim(asvs.t)
dim(asvs.r)
###--- recode metadata----- #
metadat<-metadat%>% mutate(Compartment=recode(Fraction, 'Bulk'='Bulk_Soil', 'Rhizo'='Rhizosphere','Endo'='Roots', 'Nod'='Nodule'))
metadat<-metadat[, c(1,3:6)]
metadat<-metadat%>% mutate(Fraction=recode(BONCAT, 'DNA'= 'Total_DNA', 'SYBR'= 'Viable_Cell', 'POS'='Active_Cell', 'ctl'= 'ctl'))
#to make coloring things easier I'm gong to added a combined fractionXboncat column
metadat<-mutate(metadat, compartment_BCAT = paste0(metadat$Fraction, metadat$Compartment))
##------make phyloseq object with rarefied data -------#
asvs.phyloseq<- (asvs.r)
taxon<-taxon[,1:7]
metadat<-as.matrix(metadat)
y<-colnames(asvs.raw)
rownames(metadat) <- y
metadat<-as.data.frame(metadat)
#import it phyloseq
Workshop_ASVS <- otu_table(asvs.phyloseq, taxa_are_rows = FALSE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
ps <- phyloseq(Workshop_taxo, Workshop_ASVS,Workshop_metadat)
# remove sampled that had less than 50 cells
ps<-subset_samples(ps, SampleID!="C7E-POS_S34")
metadat<-metadat %>% filter(SampleID!="C7E-POS_S34")
# remove chloroplasts and mitochondria
df<-subset_samples(ps, Compartment=="Roots" | Compartment=="Nodule" )
df<-prune_taxa(taxa_sums(df) > 0, df)
remove<-subset_taxa(df, Domain=="Unassigned" |  Phyla=="" | Phyla==" p__"  )
remove
### These 5 ASVS were not mitochondria or chloroplasts, the remain 48 were
kp<-c("a49a51f3a3e3ea140206b10c5665cc13", "55c30bcbeacfedffa7aeb332600548b2" , "cfeae1df224b7e426ea125ab2bb824fc", "b260024f11a7d77d4f03e5ca2e239860", "f5211207035c7ea5b6f2ecfdad3765e1")
badtaxa<-taxa_names(remove)
badtaxa <- badtaxa[!(badtaxa %in% kp)]
length(badtaxa)
alltaxa<-taxa_names(ps)
mytaxa <- alltaxa[!(alltaxa %in% badtaxa)]
ps.r<-prune_taxa(mytaxa, ps )
ps.r<-prune_taxa(taxa_sums(ps.r) > 0, ps.r)
ps.r
# ps.r is rarefied. ps is not.
# 12619 taxa
# check  reads after QC
n<-rowSums(otu_table(ps.r))
# number of ASVS after QC
n<-otu_table(ps)
n<-rowSums(ifelse(n[]>0,1,0))
n
#####filtered rarefied dataset #####
# select for taxa that are in at least 3 active sample or 3 viable samples
# and have at least 50 reads across all samples
active<-subset_samples(ps.r, BONCAT=="POS")
active<-ps_prune(active, min.samples = 3, min.reads = 50)
active<-prune_taxa(taxa_names(active)!="Others", active )
active<-prune_taxa(taxa_sums(active) > 0, active)
active
#317 taxa
dfa<-as.data.frame(otu_table(active))
dfa[1:13,1:3]
#viable
viable<-subset_samples(ps.r, BONCAT=="SYBR")
viable<-ps_prune(viable, min.samples = 3, min.reads = 50)
viable<-prune_taxa(taxa_names(viable)!="Others", viable )
viable<-prune_taxa(taxa_sums(viable) > 0, viable)
viable
#541 taxa
dfv<-as.data.frame(otu_table(viable))
df<-full_join(dfa, dfv)
dim(df) # 617 taxa
# ASV that are have 3 in viable or 3 in active
asvkp<-unique(colnames(df))
psfilter.r<-prune_taxa(asvkp, ps.r )
psfilter.r #617 taxa
##big heatmap, no phylogeny ##
## use rarefied, filtered dataset.
# at least in 3 samples min reads is 50
# subset to rhizosphere active and viable
sample_data(psfilter.r)
ps1<-subset_samples(psfilter.r, Fraction!="Total_DNA" & Compartment!="ctl")
ps1<-prune_taxa(taxa_sums(ps1) > 0, ps1)
ps1
sample_data(ps1)
# 560 taxa
taxon<-as.data.frame(tax_table(psfilter.r))
df<-as.data.frame(t(as.data.frame(otu_table(psfilter.r))))
head(df)
####### add taxon
df$asv<-row.names(df)
taxon$asv <- row.names(taxon)
df<-left_join(df, taxon)
head(df)
#### change some names to be more readable
df$Family[grepl(" f__Xantho", df$Family)] <- " f__Xanthobacteraceae"
df$Family[grepl(" f__Rhizo", df$Family)] <- " f__Rhizobiaceae"
df$Family[grepl(" f__Pyrino", df$Family)] <- " f__Pyrinomonadaceae"
df$Family[grepl(" f__Burkhold", df$Family)] <- " f__Burkholderiaceae"
df$Family[grepl(" f__Solirub", df$Family)]  <-" f__Solirubrobacteraceae"
df$Family[grepl(" f__Chitino", df$Family)]  <-" f__Chitinophagaceae"
df$Family[grepl(" f__Rhodano", df$Family)] <- " f__Rhodanobacteraceae"
df$Family[grepl(" f__Bacillaceae_H", df$Family)] <- " f__Bacillaceae"
df$Family[grepl(" f__Streptomycetaceae", df$Family)] <-  " f__Streptomycetaceae"
df$Family[grepl(" f__Blastocatellaceae", df$Family)] <-  " f__Blastocatellaceae"
df$Family[grepl(" f__Cyclobacteriaceae", df$Family)] <-  " f__Cyclobacteriaceae"
df$Family[grepl(" f__Dermatophilaceae_3" , df$Family)] <-  " f__Dermatophilaceae"
df$Family
# group asvs with unkowne families
df$Family[grepl("-", df$Family)] <-  " f__"
df$Family[grepl(" f__UBA", df$Family)] <-  " f__"
df$Family[grepl(" f__J", df$Family)] <-  " f__"
df$Family[grepl(" f__SC", df$Family)] <-  " f__"
df$Family[grepl(" f__RS", df$Family)] <-  " f__"
df$Family[grepl(" f__HR", df$Family)] <-  " f__"
df$Family[grepl(" f__Q", df$Family)] <-  " f__"
df$Family[grepl(" f__SC", df$Family)] <-  " f__"
df$Family[grepl(" f__TK", df$Family)] <-  " f__"
df$Family[grepl(" f__W", df$Family)] <-  " f__"
unique(df$Family)
df$Family[gsub("", df$Family)] <-  " f__"
?gsub
gsub("",  " f__",df$family)
df$Family
sub("",  " f__",df$family)
df$family
sub("",  " f__",df$Family)
sample_data(psfilter.r)
ps1<-subset_samples(psfilter.r, Fraction!="Total_DNA" & Compartment!="ctl")
ps1<-prune_taxa(taxa_sums(ps1) > 0, ps1)
ps1
sample_data(ps1)
# 560 taxa
taxon<-as.data.frame(tax_table(psfilter.r))
df<-as.data.frame(t(as.data.frame(otu_table(psfilter.r))))
head(df)
####### add taxon
df$asv<-row.names(df)
taxon$asv <- row.names(taxon)
df<-left_join(df, taxon)
head(df)
#### change some names to be more readable
df$Family[grepl(" f__Xantho", df$Family)] <- " f__Xanthobacteraceae"
df$Family[grepl(" f__Rhizo", df$Family)] <- " f__Rhizobiaceae"
df$Family[grepl(" f__Pyrino", df$Family)] <- " f__Pyrinomonadaceae"
df$Family[grepl(" f__Burkhold", df$Family)] <- " f__Burkholderiaceae"
df$Family[grepl(" f__Solirub", df$Family)]  <-" f__Solirubrobacteraceae"
df$Family[grepl(" f__Chitino", df$Family)]  <-" f__Chitinophagaceae"
df$Family[grepl(" f__Rhodano", df$Family)] <- " f__Rhodanobacteraceae"
df$Family[grepl(" f__Bacillaceae_H", df$Family)] <- " f__Bacillaceae"
df$Family[grepl(" f__Streptomycetaceae", df$Family)] <-  " f__Streptomycetaceae"
df$Family[grepl(" f__Blastocatellaceae", df$Family)] <-  " f__Blastocatellaceae"
df$Family[grepl(" f__Cyclobacteriaceae", df$Family)] <-  " f__Cyclobacteriaceae"
df$Family[grepl(" f__Dermatophilaceae_3" , df$Family)] <-  " f__Dermatophilaceae"
# group asvs with unkowne families
df$Family[grepl("-", df$Family)] <-  " f__"
df$Family[grepl(" f__UBA", df$Family)] <-  " f__"
df$Family[grepl(" f__J", df$Family)] <-  " f__"
df$Family[grepl(" f__SC", df$Family)] <-  " f__"
df$Family[grepl(" f__RS", df$Family)] <-  " f__"
df$Family[grepl(" f__HR", df$Family)] <-  " f__"
df$Family[grepl(" f__Q", df$Family)] <-  " f__"
df$Family[grepl(" f__SC", df$Family)] <-  " f__"
df$Family[grepl(" f__TK", df$Family)] <-  " f__"
df$Family[grepl(" f__W", df$Family)] <-  " f__"
unique(df$Family)
length(unique(df$Family)) #71
#rm other columns
df<-select(df, -Phyla, -Domain, -Class, -Order, -Genus, -Species, -asv)
unique(df$Family) # 926
#aggregate
df<-aggregate(cbind(C10N.SYBR_S26, C10R.SYBR_S20, C1E.SYBR_S21,  C1N.SYBR_S13,  C1R.SYBR_S16,  C2E.SYBR_S22,
C2N.SYBR_S15,  C2R.SYBR_S17 ,  C5E.SYBR_S23,  C5R.SYBR_S18,  C7E.SYBR_S24,  C7N.SYBR_S25,  C7R.SYBR_S19,
C10E.POS_S60,  C10N.POS_S65, C1E.POS_S31, C1N.POS_S61,  C2E.POS_S32, C2N.POS_S62,  C5E.POS_S33,
C5N.POS_S63, C10R.POS_S30, C1R.POS_S27, C2R.POS_S28, C5R.POS_S29 ) ~ Family, data = df, FUN = sum, na.rm = TRUE)
row.names(df) <- df$Family
dim(df) # 71 families
df
dim(df)
### summarize by compartment
df$Viable_rhizo <-   rowMeans(df %>% dplyr::select(contains("R.SYB"))) %>%   glimpse()
df$Viable_root <-   rowMeans(df %>% dplyr::select(contains("E.SYB"))) %>%   glimpse()
df$Viable_nodule <-   rowMeans(df %>% dplyr::select(contains("N.SYB"))) %>%   glimpse()
#### summarize by compartment
df$Active_rhizo <-   rowMeans(df %>% dplyr::select(contains("R.POS"))) %>%   glimpse()
df$Active_root <-   rowMeans(df %>% dplyr::select(contains("E.POS"))) %>%   glimpse()
df$Active_nodule <-   rowMeans(df %>% dplyr::select(contains("N.POS"))) %>%   glimpse()
df<-df%>% select(c(Active_rhizo, Active_root, Active_nodule, Viable_rhizo,Viable_root, Viable_nodule )) %>% mutate(otu= row.names(df))
head(df)
#rm the unknown family row
df<-df%>%filter(row.names(df)!="") %>% filter(row.names(.)!=" f__")
row.names(df)<-gsub(" f__", "", row.names(df))
df<-df %>% select(-otu)
row.names(df)
head(df)
# remove families with less than 50 reads across
df<-df[rowSums(df)>50,]
dim(df)
