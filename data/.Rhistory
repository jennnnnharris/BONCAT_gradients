)
library(DT)
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(phyloseq)
library(scales)
library(data.table)
taxa_sums(get_taxa_unique(Workshop.16S, Phylum))
taxa_sums(get_taxa_unique(Workshop.16S, "Phylum:))
taxa_sums(Workshop.16S)
topN = 200
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
length(get_taxa_unique(GP20, "Phylum"))
print(get_taxa_unique(GP20, "Phylum"))
windows()
plot_bar(Workshop.16S, fill = "Phylum")
taxa_sums(get_taxa_unique(Workshop.16S, "Phylum"))
# We make a data table with information on the OTUs
ps1.dt.taxa = data.table(tax_table(Workshop.16S),OTUabundance = taxa_sums(Workshop.16S),OTU = taxa_names(Workshop.16S))
ps1.dt.tax.plot <- ggplot(ps1.dt.taxa, aes(OTUabundance)) + geom_histogram() + ggtitle("Histogram of OTU (unique sequence) counts") + theme_bw()
print(ps1.dt.tax.plot)
library(ggplot2)
ps1_df= data.table(as(sample_data(Workshop.16S), "data.frame"), Reads_per_sample = sample_sums(Workshop.16S), keep.rownames = TRUE)
ps1_df_plot = ggplot(ps1_df, aes(Reads_per_sample)) + geom_histogram() + ggtitle("Distribution of reads per sample") + ylab("Sample counts")
print(ps1_df_plot) #normal plot
# We make a data table with information on the OTUs
ps1.dt.taxa = data.table(tax_table(Workshop.16S),OTUabundance = taxa_sums(Workshop.16S),OTU = taxa_names(Workshop.16S))
ps1.dt.tax.plot <- ggplot(ps1.dt.taxa, aes(OTUabundance)) + geom_histogram() + ggtitle("Histogram of OTU (unique sequence) counts") + theme_bw()
print(ps1.dt.tax.plot)
ggplot(ps1.dt.taxa, aes(OTUabundance)) +
geom_histogram() +
ggtitle("Histogram of Total Counts") +
xlim(0, 1000) + ylim (0,50) + theme_bw()
print((sum(reads_per_OTU[reads_per_OTU <= 2])/sum(reads_per_OTU))*100)
top_otu <- top_taxa(Workshop.16S, 25)
library(gplots)
library(ggplot2)
library(vegan)
library(plyr)
library(RColorBrewer)
library(reshape2)
library(scales)
library(data.table)
library(dplyr)
library(phyloseq)
library(DT)
library(Heatplus)
library(viridis)
library(hrbrthemes)
library(ade4)
#if (!require("BiocManager", quietly = TRUE))
# install.packages("BiocManager")
#BiocManager::install("phyloseq")
BiocManager::install("Heatplus")
library(viridis)
library(hrbrthemes)
library(ade4)
## Set the working directory; modify to your own ###
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data")
### Import Data ###
taxon <- read.table("16s/taxonomy.txt", sep="\t", header=T, row.names=1)
otus <- read.table("16s/feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- read.delim("16s/metadata.txt", sep="\t", header = T, check.names=FALSE)
## Set the working directory; modify to your own ###
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data")
### Import Data ###
taxon <- read.table("16s/taxonomy.txt", sep="\t", header=T, row.names=1)
otus <- read.table("16s/feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- read.delim("16s/metadata.txt", sep="\t", header = T, check.names=FALSE)
## Transpose OTU table ##
otus.t <- t(otus)
## order metadata
metadat<-metadat[order(metadat$SampleID),]
## order otu table
otu.t<-otus.t[order(row.names(otus.t)),]
## Determine minimum available reads per sample ##
min(rowSums(otus.t))
### Rarefy to obtain even numbers of reads by sample ###
set.seed(336)
otus.r<-rrarefy(otus.t, 41610)
## Convert OTU numbers to percentages ##
otus.perc<-otus.r/rowSums(otus.r)*100
#set colors
mycols=c("grey27","grey","#9795ff","#4406e2", "#ffb4f6","#e20a8f", "#695e00", "#6eda0a", "#0a7416" )
otus.t<-t(otus.r)
taxon<-taxon[,1:7]
metadat<-as.matrix(metadat)
y<-metadat
y<-colnames(otus.t)
rownames(metadat) <- y
metadat<-as.data.frame(metadat)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = TRUE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
#test it worked
sample_names(Workshop.16S)
print(Workshop.16S)
# get rid of taxa that aren; tin any samples
Workshop.16S<-prune_taxa(taxa_sums(Workshop.16S) > 0, Workshop.16S)
any(taxa_sums(Workshop.16S) == 0)
#check n taxa
ntaxa(Workshop.16S)
rank_names(Workshop.16S)
# remove chloroplast DNA
Workshop.16S<-subset_taxa(Workshop.16S, Class!="Chloroplast")
library("data.table")
library(ggplot2)
ps1_df= data.table(as(sample_data(Workshop.16S), "data.frame"), Reads_per_sample = sample_sums(Workshop.16S), keep.rownames = TRUE)
ps1_df_plot = ggplot(ps1_df, aes(Reads_per_sample)) + geom_histogram() + ggtitle("Distribution of reads per sample") + ylab("Sample counts")
print(ps1_df_plot) #normal plot
# We make a data table with information on the OTUs
ps1.dt.taxa = data.table(tax_table(Workshop.16S),OTUabundance = taxa_sums(Workshop.16S),OTU = taxa_names(Workshop.16S))
ps1.dt.tax.plot <- ggplot(ps1.dt.taxa, aes(OTUabundance)) + geom_histogram() + ggtitle("Histogram of OTU (unique sequence) counts") + theme_bw()
print(ps1.dt.tax.plot)
ggplot(ps1.dt.taxa, aes(OTUabundance)) +
geom_histogram() +
ggtitle("Histogram of Total Counts") +
xlim(0, 1000) + ylim (0,50) + theme_bw()
top_otu <- top_taxa(Workshop.16S, 25)
get_taxa_unique(Workshop.16S, "Phylum")
taxa_sums(Workshop.16S)
topN = 200
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
length(get_taxa_unique(GP20, "Phylum"))
View(Workshop.16S)
print(get_taxa_unique(GP20, "Phylum"))
length(get_taxa_unique(GP20, "Phylum"))
plot_bar(Workshop.16S, fill = "Phylum")
Workshop_taxo <- tax_table(as.matrix(taxon))
print(Workshop.16S)
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
most_abundant_taxa
taxa_sums(Workshop.16S)
tax_agg(Workshop.16S, rank = "Family")
sample_variables(Workshop.16S)
length(sample_variables(Workshop.16S))
rank_names(Workshop.16S)
get_taxa_unique
taxa_sums(get_taxa_unique(Workshop.16S, "Phyla"))
get_taxa_unique(Workshop.16S, "Phyla")
# We make a data table with information on the OTUs
ps1.dt.taxa = data.table(tax_table(Workshop.16S),OTUabundance = taxa_sums(Workshop.16S),OTU = taxa_names(Workshop.16S))
#checking out otus
ps1_df= data.table(as(sample_data(Workshop.16S), "data.frame"), Reads_per_sample = sample_sums(Workshop.16S), keep.rownames = TRUE)
ps1_df_plot = ggplot(ps1_df, aes(Reads_per_sample)) + geom_histogram() + ggtitle("Distribution of reads per sample") + ylab("Sample counts")
print(ps1_df_plot) #normal plot
# We make a data table with information on the OTUs
ps1.dt.taxa = data.table(tax_table(Workshop.16S),OTUabundance = taxa_sums(Workshop.16S),OTU = taxa_names(Workshop.16S))
ps1.dt.tax.plot <- ggplot(ps1.dt.taxa, aes(OTUabundance)) + geom_histogram() + ggtitle("Histogram of OTU (unique sequence) counts") + theme_bw()
print(ps1.dt.tax.plot)
ggplot(ps1.dt.taxa, aes(OTUabundance)) +
geom_histogram() +
ggtitle("Histogram of Total Counts") +
xlim(0, 1000) + ylim (0,50) + theme_bw()
#interacting with phyloseq object
sample_variables(Workshop.16S)
length(sample_variables(Workshop.16S))
rank_names(Workshop.16S)
get_taxa_unique(Workshop.16S, "Phyla")
taxa_sums(Workshop.16S)
taxa_sums(get_taxa_unique(Workshop.16S, "Phyla"))
get_taxa_unique(Workshop.16S, "Phyla")
taxa_sums(Workshop.16S)
topN = 200
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
#select most abundant taxa
topN = 200
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
length(get_taxa_unique(GP20, "Phyla"))
print(get_taxa_unique(GP20, "Phyla"))
windows()
plot_bar(Workshop.16S, fill = "Phylum")
plot_bar(Workshop.16S, fill = "Phylum")
plot_bar(Workshop.16S, fill = "Phyl")
plot_bar(Workshop.16S, fill = "Phyla")
plot_bar(Workshop.16S, fill = "Phyla")
print(get_taxa_unique(GP20, "Phyla"))
#what phyla are here?
rank_names(Workshop.16S)
get_taxa_unique(Workshop.16S, "Phyla")
otus.t<-t(otus.t)
taxon<-taxon[,1:7]
metadat<-as.matrix(metadat)
y<-metadat
y<-colnames(otus.t)
rownames(metadat) <- y
metadat<-as.data.frame(metadat)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = TRUE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
otus.t<-t(otus.r)
## Determine minimum available reads per sample ##
min(rowSums(otus.t))
otus.r
otus.t
otus.t
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = TRUE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
#test it worked
sample_names(Workshop.16S)
print(Workshop.16S)
## Set the working directory; modify to your own ###
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data")
### Import Data ###
taxon <- read.table("16s/taxonomy.txt", sep="\t", header=T, row.names=1)
otus <- read.table("16s/feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- read.delim("16s/metadata.txt", sep="\t", header = T, check.names=FALSE)
## Transpose OTU table ##
otus.t <- t(otus)
otus.t
## order metadata
metadat<-metadat[order(metadat$SampleID),]
## order otu table
otu.t<-otus.t[order(row.names(otus.t)),]
otu.t
View(otu.t)
## order otu table
otus.t<-otus.t[order(row.names(otus.t)),]
otus.t<- t(otu.t)
taxon<-taxon[,1:7]
metadat<-as.matrix(metadat)
y<-metadat
y<-colnames(otus.t)
rownames(metadat) <- y
metadat<-as.data.frame(metadat)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = TRUE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
#test it worked
sample_names(Workshop.16S)
print(Workshop.16S)
# get rid of taxa that aren; tin any samples
Workshop.16S<-prune_taxa(taxa_sums(Workshop.16S) > 0, Workshop.16S)
any(taxa_sums(Workshop.16S) == 0)
#check n taxa
ntaxa(Workshop.16S)
rank_names(Workshop.16S)
# remove chloroplast DNA
Workshop.16S<-subset_taxa(Workshop.16S, Class!="Chloroplast")
# We make a data table with information on the OTUs
ps1.dt.taxa = data.table(tax_table(Workshop.16S),OTUabundance = taxa_sums(Workshop.16S),OTU = taxa_names(Workshop.16S))
ps1.dt.tax.plot <- ggplot(ps1.dt.taxa, aes(OTUabundance)) + geom_histogram() + ggtitle("Histogram of OTU (unique sequence) counts") + theme_bw()
print(ps1.dt.tax.plot)
ggplot(ps1.dt.taxa, aes(OTUabundance)) +
geom_histogram() +
ggtitle("Histogram of Total Counts") +
xlim(0, 1000) + ylim (0,50) + theme_bw()
#interacting with phyloseq object
sample_variables(Workshop.16S)
length(sample_variables(Workshop.16S))
#what phyla are here?
rank_names(Workshop.16S)
get_taxa_unique(Workshop.16S, "Phyla")
get_taxa_unique(Workshop.16S, "Phyla")
#how many of each taxa?
taxa_sums(Workshop.16S)
#select most abundant taxa
topN = 200
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
length(get_taxa_unique(GP20, "Phyla"))
print(get_taxa_unique(GP20, "Phyla"))
Actino <- subset_taxa(Workshop.16S, Phylum == "Actinobacteria")
Actino.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phylum == "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phylum == "Acidobacteria")
Acid.sum<-rowSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phylum == "Cyanobacteria")
cyano.sum<-rowSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phylum == "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phylum == "Bacteroidetes")
Bact.sum<-rowSums(otu_table(Bact))
Actino <- subset_taxa(Workshop.16S, Phylum == "Actinobacteria")
Actino <- subset_taxa(Workshop.16S, Phyla == "Actinobacteria")
Actino <- subset_taxa(Workshop.16S, Phyla == "Actinobacteria")
Actino <- subset_taxa(Workshop.16S, Phyla == " Nitrospirota"  )
#select most abundant taxa
topN = 100
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
length(get_taxa_unique(GP20, "Phyla"))
print(get_taxa_unique(GP20, "Phyla"))
nitro <- subset_taxa(Workshop.16S, Phyla == "Actinobacteriota"  )
nitro.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla == "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phyla == "Acidobacteria")
nitro <- subset_taxa(Workshop.16S, Phyla == "Actinobacteriota"  )
nitro <- subset_taxa(Workshop.16S, Phyla == "Actinobacteriota"  )
nitro <- subset_taxa(Workshop.16S, Phyla == "Actinobacteriota"  )
nitro <- subset_taxa(Workshop.16S, Phyla =="Actinobacteriota")
nitro <- subset_taxa(Workshop.16S, Phyla =="Actinobacteriota")
print(get_taxa_unique(GP20, "Phyla")
print(get_taxa_unique(GP20, "Phyla"))
print(get_taxa_unique(GP20, "Phyla"))
subset_taxa(Workshop.16S, Phyla == "Actinobacteriota")
print(get_taxa_unique(GP20, "Family"))
nitro <- subset_taxa(Workshop.16S, Phyla == "Actinobacteriota")
nitro <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
nitro
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Action.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phyla = "Acidobacteria")
Acid.sum<-rowSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phyla = "Cyanobacteria")
cyano.sum<-rowSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phyla == "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phyla = " Bacteroidota" )
Firmi <- subset_taxa(Workshop.16S, Phyla = "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phyla = " Bacteroidota" )
Bact.sum<-rowSums(otu_table(Bact))
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
Other<-100-(Action.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
Actino.sum<-rowSums(otu_table(Actino))
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
phyl.ag<-aggregate(phyl.mat~metadat$siteXflower,FUN=mean)
phyl.ag<-aggregate(phyl.mat~metadat$Fraction,FUN=mean)
metadat$Fraction
metadat
#test it worked
sample_names(Workshop.16S)
print(Workshop.16S)
phyl.ag<-aggregate(phyl.mat~metadat$Fraction,FUN=mean)
View(metadat)
print(phyl.mat)
Actino.sum<-rowSums(otu_table(Actino))
Actino.sum
otus.t<- t(otus.t)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = TRUE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
otus.phyloseq<- t(otus.t)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.phyloseq), taxa_are_rows = TRUE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
#test it worked
sample_names(Workshop.16S)
print(Workshop.16S)
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phyla = "Acidobacteria")
Acid.sum<-rowSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phyla = "Cyanobacteria")
cyano.sum<-rowSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phyla = "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phyla = " Bacteroidota" )
Bact.sum<-rowSums(otu_table(Bact))
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
print(get_taxa_unique(GP20, "Family"))
Actino
Actino.sum<-colSums(otu_table(Actino))
Actino.sum
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-colSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-colSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phyla = "Acidobacteria")
Acid.sum<-colSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phyla = "Cyanobacteria")
cyano.sum<-colSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phyla = "Firmicutes")
Firmi.sum<-colSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phyla = " Bacteroidota" )
Bact.sum<-colSums(otu_table(Bact))
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
print(phyl.mat)
phyl.ag<-aggregate(phyl.mat~metadat$Fraction,FUN=mean)
rownames(phyl.ag)<-phyl.ag[,1]
phyl.ag.2<-as.matrix(phyl.ag[,-1])
phyl.ag.names<-rownames(phyl.ag)
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","#dd5182","#ff6e54", "#ffa600"),horiz=FALSE,
ylab="Relative abundance (%)")
# data wrangling
phyl.df<- as.data.frame(phyl.ag.2)
phyl.df[,8]<-row.names(phyl.ag.2)
phy.df.t<-gather(phyl.df, "taxa",value, 1:7)
# Stacked + percent
windows()
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
ggtitle("Top Phylum") +
theme_bw(base_size = 14) +
xlab("site")+
ylab("relative abundance %")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
ggtitle("Top Phylum") +
theme_bw(base_size = 14) +
xlab("site")+
ylab("relative abundance %")
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
print(phyl.mat)
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
print(phyl.mat)
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-colSums(otu_table(Actino))
Actino.sum
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-colSums(otu_table(Proteo))
Proteo.sum
Acid <- subset_taxa(Workshop.16S, Phyla = "Acidobacteria")
Acid.sum<-colSums(otu_table(Acid))
Acid.sum
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
Actino.sum
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
View(Acid)
Actino(otu_table())
otu_table(Actino)
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-colSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phyla = "Acidobacteria")
Acid.sum<-colSums(otu_table(Acid))
otu_table(Proteo)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = FALSE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
print(Workshop.16S)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.t), taxa_are_rows = FALSE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon))
Workshop.16S <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
#test it worked
sample_names(Workshop.16S)
print(Workshop.16S)
# get rid of taxa that aren; tin any samples
Workshop.16S<-prune_taxa(taxa_sums(Workshop.16S) > 0, Workshop.16S)
any(taxa_sums(Workshop.16S) == 0)
#check n taxa
ntaxa(Workshop.16S)
rank_names(Workshop.16S)
# remove chloroplast DNA
Workshop.16S<-subset_taxa(Workshop.16S, Class!="Chloroplast")
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
Actino.sum
Proteo.sum<-rowSums(otu_table(Proteo))
Proteo.sum
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phyla = "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phyla = "Acidobacteria")
Acid.sum<-rowSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phyla = "Cyanobacteria")
cyano.sum<-rowSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phyla = "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phyla = " Bacteroidota" )
Bact.sum<-rowSums(otu_table(Bact))
Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
print(phyl.mat)
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
Actino.sum<-rowSums(otu_table(Actino))
subset_taxa
Actino <- subset_taxa(Workshop.16S, Phyla = "Actinobacteriota")
