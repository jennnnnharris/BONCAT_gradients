#make a dendrogram
row_dendro = as.dendrogram(hclust(dist((m))))
############  make the heatmap  plot #################33
windows(8,10)
heatmap.phylo(x = m, Rowp = as.phylo(as.hclust(row_dendro)), Colp = as.phylo(as.hclust(col_dendro)))
###############-----heatmap with averageing across samples ###################
#subst by treament
n<-c("C10N","C1N","C2N", "C7N")
e<- c("C1E","C2E","C5E","C7E")
r<- c("C10R", "C1R",  "C2R",  "C5R")
# average log fold change in each treatment
nod<- otu_log2%>% select(all_of(n))
nod<-rowSums(nod)/4
endo<- otu_log2%>% select(all_of(e))
endo<- rowSums(endo)/4
rhiz<- otu_log2%>% select(all_of(r))
rhiz<-rowSums(rhiz)/4
#combine
avg_log2<-cbind(nod, endo)%>% cbind(rhiz)
# now turn to df
avg_log2<-as.data.frame(avg_log2)
##top 100 by the biggest log change
s<-rowSums(abs(avg_log2))
s<-sort(s, decreasing = TRUE)
top100<-names(s)[1:100]
# tree is so big. filter and make it smaller
otus<-row.names(otu.raw) # all the asvs
asvs_remove<-setdiff(otus, top100) #asvs we don't want
length(otus)
length(r)
tree.endo<-drop.tip(tree, asvs_remove) # remove asvs we don't need
target<-tree.endo$tip.label
# subest dataframe to be on the top 100 taxa
# add otu col
otus<-row.names(avg_log2)
avg_log2<-cbind(avg_log2, otus)
otu_100<-subset(avg_log2, otus %in% top100)
#grab names
n<-colnames(otu_100)
r<-row.names(otu_100)
# order row to match  tree
otu_100<-otu_100[match(target, otu_100$otus),]
otu_100<-otu_100[-4] # remove otu column
# make a matrix
m<-matrix(as.numeric(unlist(otu_100)),nrow=nrow(otu_100))
row.names(m)<-r
colnames(m)<-n[-4]
#otu_log2_100
# get names of taxa
#taxon
otus<-row.names(taxon)
tax<-cbind(taxon, otus)
#subset taxa table
taxa_100<-subset(tax, otus %in% top100)
# order by otu
taxa_100<-taxa_100[match(target, taxa_100$otus),]
g<-taxa_100$Family
# rename rows
row.names(m)<-g
# rename tree tips
tree.endo$tip.label <- g
# Create the matrix and get the column dendrogram for the heatmap from it.
m<-structure(m)
#make a dendrogram
col_dendro = as.dendrogram(hclust(dist(t(m))))
# And make the plot....
setwd("C:/Users/Jenn/The Pennsylvania State University/Burghardt, Liana T - Burghardt Lab Shared Folder/Projects/BONCAT/Data/figures/16s")
svg(file="heatmap.svg",width = 8 ,height=8)
#windows(15,10)
heatmap.phylo(x = m, Rowp = tree.endo, Colp = as.phylo(as.hclust(col_dendro)))
dev.off()
######------aggregate by higher taxa level for heatmap------------########
o<-row.names(taxon) # make column to join dfs
taxon<-cbind(taxon, o)
o<-row.names(otus)  # make column to join dfs
otus<-cbind(otus, o)
df<-left_join(otus, taxon) #join df
df1<-df[,c(1:42, 48)] %>%group_by(Family) %>% summarise_all(sum) #summarize by family
#make total df
total<-df1 %>% select(contains('SYBR')) #select total cells columns
total<-select(total, -C7R.SYBR_S19) #remove this sample because I don't have matching active sample for it
#make active df
active<-df1 %>% select(contains('POS')) #select total cells columns
active<-select(active, -C10E.POS_S60, -C5N.POS_S63) ## remove sample I don't have a value for inactive
#calculate log fold change
otu_log2<-log2(active+1/(total+1))
#label columns and rows
n<-c("C10N", "C10R" ,"C1E" , "C1N" , "C1R" , "C2E" , "C2N" , "C2R" , "C5E" , "C5R" , "C7E" , "C7N" )
colnames(otu_log2)<-n
row.names(otu_log2)<-df1$Family
head(otu_log2)
######avg by treament############
n<-c("C10N","C1N","C2N", "C7N")
e<- c("C1E","C2E","C5E","C7E")
r<- c("C10R", "C1R",  "C2R",  "C5R")
# average log fold change in each treatment
nod<- otu_log2%>% select(all_of(n))
nod<-rowSums(nod)/4
endo<- otu_log2%>% select(all_of(e))
endo<- rowSums(endo)/4
rhiz<- otu_log2%>% select(all_of(r))
rhiz<-rowSums(rhiz)/4
#combine
avg_log2<-cbind(nod, endo)%>% cbind(rhiz)
# now turn to df
avg_log2<-as.data.frame(avg_log2)
#########top 100 by the biggest log change ############
s<-rowSums(abs(avg_log2))
s<-sort(s, decreasing = TRUE)
top100<-names(s)[1:100]
## Read in the tree file made by jenn
## rip this tre is by otus
setwd("C:/Users/Jenn/The Pennsylvania State University/Burghardt, Liana T - Burghardt Lab Shared Folder/Projects/BONCAT/Data/16s")
tree = read.tree("otu_output/tree.nwk")
print(tree)
###### lets do something jenky ###
# grab a representative otu for each family.
df # df of outs and taxa
df1<-df%>% filter(Family %in% top100) # select top familys
sums<-rowSums(df1[,c(1:42)]) # sum across samples
df1<-data.frame(df1$o, df1$Family, sums) # make new df
df1<-(df1[order(df1$df1.Family, -df1$sums),]) # order df
# grab most abundance otu for each family
df1.o=1
df1.Family=1
sums=1
newdf <- data.frame(df1.o, df1.Family, sums)
df1<-filter(df1, df1$df1.Family != "") # drop famliy that is missing a label
top100<-unique(df1$df1.Family)
for (i in top100) {
print(i)
d<- filter(df1, df1$df1.Family == i) # select df
d<-(d[order(-d$sums),]) # order df
d<-d[1,] # grab top taxa
print(d)
newdf<-rbind(d, newdf)
}
rep.otus<-newdf$df1.o
# tree is so big. filter and make it smaller
otus<-row.names(otu.raw) # all the asvs
asvs_remove<-setdiff(otus, rep.otus) #asvs we don't want
length(otus)
asvs_remove
tree.endo<-drop.tip(tree, asvs_remove) # remove asvs we don't need
target<-tree.endo$tip.label
print(tree.endo)
### change names in tre to be family names
# order otus in df that matches otus and familys
newdf1<-newdf[match(target, newdf$df1.o),]
newdf1
# put family names on tree
#taxon
g<-newdf1$df1.Family
# rename tree tips
tree.endo$tip.label <- g
# rename rows
row.names(m)<-g
# subest avg_log2 dataframe to be on the top 100 taxa
# add famliy col
fam<-row.names(avg_log2)
avg_log2<-cbind(avg_log2, fam)
otu_100<-subset(avg_log2, fam %in% top100)
#grab names
dim(otu_100)
n<-colnames(otu_100[1:3])
r<-row.names(otu_100)
# order row to match  tree
otu_100<-otu_100[match(target, otu_100$otus),]
otu_100<-otu_100[-4] # remove otu column
otu_100<-otu_100[match(newdf1$df1.Family, otu_100$fam),]
# make a matrix
m<-matrix(as.numeric(unlist(otu_100[1:3])),nrow=nrow(otu_100))
row.names(m)<-r
colnames(m)<-n[-4]
#otu_log2_100
# Create the matrix and get the column dendrogram for the heatmap from it.
m<-structure(m)
#make a dendrogram
col_dendro = as.dendrogram(hclust(dist(t(m))))
# And make the plot....
setwd("C:/Users/Jenn/The Pennsylvania State University/Burghardt, Liana T - Burghardt Lab Shared Folder/Projects/BONCAT/Data/figures/16s")
svg(file="heatmap.svg",width = 8 ,height=8)
#windows(15,10)
heatmap.phylo(x = m, Rowp = tree.endo, Colp = as.phylo(as.hclust(col_dendro)))
dev.off()
#################------ fold change total to active---------------####
#### remove taxa from bulk soil
ps1<- subset_samples(ps,Fraction !="Total_DNA"& Fraction!="beads" & Fraction !="ctl" )
ps1<-prune_taxa(taxa_sums(ps1) > 0, ps1)
any(taxa_sums(ps1) == 0)
ps1
# 6189 taxa
#Who are the most abundant taxa minus the total DNA
#who are most abundant taxa
topN = 200
most_abundant_taxa = sort(taxa_sums(ps1), TRUE)[1:topN]
print(most_abundant_taxa)
Top_tax = prune_taxa(names(most_abundant_taxa), ps1)
length(get_taxa_unique(Top_tax, "Class"))
length(get_taxa_unique(Top_tax, "Phyla"))
length(get_taxa_unique(Top_tax, "Genus"))
length(get_taxa_unique(Top_tax, "Family"))
tax_table(Top_tax)
otu_table(Top_tax)
# subset total cell and active fraction
ps.Total<- subset_samples(ps1,Fraction =="Total_Cells" )
otu_total<-as.data.frame(t(as.data.frame(otu_table(ps.Total))))
# boncat pos table doesn't have C7Rpos, so I'll remove that from the table
head(otu_total)
otu_total<-select(otu_total, -C7R.SYBR_S19)
# length #7185
#       C10N.SYBR_S26 C10R.SYBR_S20 C1E.SYBR_S21 C1N.SYBR_S13
# taxa1  139581          1430        62828       126909
# taxa2  19537           179         8553        17541
# taxa3  78                0         4336        22797
ps.Active<- subset_samples(ps1,Fraction =="BONCAT_Active" )
otu_active<-as.data.frame(t(as.data.frame(otu_table(ps.Active))))
## missing some sample from sybr for C10 E and C5 N
## so i think I'll just remove those ones and won't have a value for inactive for those samples
otu_active<-select(otu_active, -C10E.POS_S60, -C5N.POS_S63)
#head(otu_active)
#sum<-rowSums(otu_active)
# length 7185
# taxa1 10000
# taxa2 0
# taxa3 0
##------- log fold change from active to inactive ----------
#what do you do for things that are not present in total?
# can we just add 1 to everything?
otu_log2<-log2(otu_active+1/(otu_total+1))
n<-c("C10N", "C10R" ,"C1E" , "C1N" , "C1R" , "C2E" , "C2N" , "C2R" , "C5E" , "C5R" , "C7E" , "C7N" )
colnames(otu_log2)<-n
head(otu_log2)
#zero in numerator = not present in active = -inf
# check distribution
otu_log2
hist(otu_log2$C10N)
hist(otu_log2$C10R)
hist(otu_log2$C1E, breaks = 20)
#####------wrangling log2 data -------#####
#transpose
t_log2_otu<- t(otu_log2)
#import metadata for summarising
metadat_l<- read.delim("16s/metadata_log2.txt", sep="\t", header = T, check.names=FALSE)
y<-colnames(otu_log2)
rownames(metadat_l) <- y
metadat_l<-as.data.frame(metadat_l)
#insert metadata to data frame
t_log2_otu<-cbind(metadat_l, t_log2)
#sumarise by rep
t_log2_otu_short<- t_log2_otu %>% group_by(Fraction) %>% summarise_if(is.numeric,median) %>% select(-REP)
# filter dataset for top asvs
# I selectws the top taxa by relative abundance above
otu_table(Top_tax)
df<-as.data.frame(tax_table(Top_tax))
dim(df)
#I'm curious who these asvs are so I'm going to add there names in
asvs<-row.names(df)
df<-mutate(df, asvs=asvs)
asvs<-row.names(otu_log2)
otu_log2<-mutate(otu_log2, asvs=asvs)
#filter the log2 dataset by the top taxa
otu_log2_200<-left_join(df, otu_log2, by= "asvs")
as.matrix(otu_log2_200[,-(1:8)])
## Read in the tree file made by jenn
tree = read.tree("16s/tree.nwk")
# my tree just has ASV names think
et the column dendrogram for the heatmap from it.
# got remove all those extract columns and
asvs200 =   (otu_log2_200[, 'asvs'])
m = as.matrix(otu_log2_200[,-(1:8)])
row.names(m)<-asvs200
m<-structure(m)
#make a dendrogram
col_dendro = as.dendrogram(hclust(dist(t(m))))
# lol tree is so big ? maybe filter and make it smaller
# we need a list of all the asvs we don't want
asvs200 # asvs we want
dim(otus.raw)
asvs<-row.names(otus.raw)
asvs_remove<-setdiff(asvs, asvs200)
tree<-drop.tip(tree, asvs_remove)
# And )make the plot....
#pdf(file="../figures/Fig2_heatmap24wk_Phylo.pdf",width = 5,height=8, useDingbats=FALSE)
heatmap.phylo(x = m, Rowp = tree, Colp = as.phylo(as.hclust(col_dendro)))
#dev.off()
# select top taxa but select the taxa with the biggest change?
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.phyloseq), taxa_are_rows = FALSE)
Workshop_metadat <- sample_data(metadat_l)
Workshop_taxo <- tax_table(as.matrix(taxon)) # this taxon file is from the prev phyloseq object length = 14833
psl <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
#test it worked
sample_names(psl)
print(psl)
# 7185 taxa because we didn't include anything that wasn't rhizo, nodule or end
#---- calculating inactive fraction-------
#Inactive<- total- active
otu_inactive<-otu_total-otu_active
# all the taxa that are higher in the active fraction than the inactive fraction (negative )are == to zero
otu_inactive[otu_inactive<0]<-0
otu_inactive
#length 7185
#       C10N.SYBR_S26 C10R.SYBR_S20 C1E.SYBR_S21 C1N.SYBR_S13
# taxa1  0              47          0            0
# taxa2  0              0           0            0
# taxa3  0              22          0            0
# change colnames
n<-c("C10N.inactive", "C10R.inactive", "C1E.inactive"  ,"C1N.inactive" , "C1R.inactive", "C2E.inactive" , "C2N.inactive"  ,"C2R.inactive" , "C5E.inactive",
"C5R.inactive",  "C7E.inactive",  "C7N.inactive" )
colnames(otu_inactive)<- n
# append the original dataset by adding the inactive taxa
#make an asvs col to join by
y<-row.names(otus)
otus<-mutate(otus, asvs= y)
y<-row.names(otu_inactive)
otu_inactive<-mutate(otu_inactive, asvs= y)
# join data frames
otus<-full_join(otu_inactive, otus)
# as row names from the asvs bit
y<-otus$asvs
row.names(otus) <- y
otus<-select(otus, -asvs)
otus
# make all the asvs that are NA in the inactive fraction zeros
otus[is.na(otus)] <- 0
# append metadata
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data")
metadat <- read.delim("16s/metadata_w_inactive.txt", sep="\t", header = T, check.names=FALSE)
metadat<-metadat%>% mutate(Compartment=recode(Fraction, 'Bulk'='Bulk_Soil', 'Rhizo'='Rhizosphere','Endo'='Roots', 'Nod'='Nodule', 'ctl'='ctl'))
metadat<-metadat[, c(1,3:6)]
metadat<-metadat%>% mutate(Fraction=recode(BONCAT, 'DNA'= 'Total_DNA', 'SYBR'= 'Total_Cells', 'POS'='BONCAT_Active', 'ctl'= 'ctl'))
#to make coloring things easier I'm gong to added a combined fractionXboncat column no sure if i need this
metadat<-mutate(metadat, compartment_BCAT = paste0(metadat$Compartment, metadat$Fraction))
metadat<-select(metadat, -BONCAT)
## order metadata
metadat<-metadat[order(metadat$SampleID),]
metadat
## order otu table
otus<-otus[, order(colnames(otus))]
## Convert OTU numbers to percentages ##
otus.perc<-otus/rowSums(otus)*100
##### Phyloseq and manipulation by taxonomy ####
#check n taxa
rank_names(ps)
#what phyla are here?
rank_names(ps)
get_taxa_unique(ps, "Phyla")
#how many of each taxa?
taxa_sums(ps)
# Are some taxa rare?
OTUabundance = as.numeric(taxa_sums(ps))
ASV = taxa_names(ps)
d1<-as.data.frame(OTUabundance)
d1<-cbind(d1, ASV)
windows()
ggplot(d1, aes(OTUabundance)) +
geom_histogram() +
ggtitle("Histogram of Total Counts") +
xlim(0, 20000) + ylim (0,50) + theme_bw()
# most taxa are rare, but some are really abundant
# who are the abundant taxa?
topN = 50
most_abundant_taxa = sort(taxa_sums(ps), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), ps)
length(get_taxa_unique(GP20, "Class"))
print(get_taxa_unique(GP20, "Phyla"))
print(get_taxa_unique(GP20, "Family"))
abundant_tax<-tax_table(GP20)
# who is in the negative PCR ctl?
#subset
ctl<-subset_samples(ps, SampleID=="CTL_S66")
sample_variables(ps)
# rm taxa that aren't there
any(taxa_sums(ctl) == 0)
ctl<-prune_taxa(taxa_sums(ctl) > 0, ctl)
any(taxa_sums(ctl) == 0)
ntaxa(ctl)
#who are the most abundant taxa?
topN = 20
most_abundant_taxa = sort(taxa_sums(ctl), TRUE)[1:topN]
print(most_abundant_taxa)
ctl20 = prune_taxa(names(most_abundant_taxa), ctl)
length(get_taxa_unique(ctl20, "Family"))
print(get_taxa_unique(ctl20, "Phyla"))
get_taxa_unique(ctl20, "Genus")
get_taxa_unique(ctl20, "Family")
#who is in the flow cytometer ctl?
#subset
ctl<-subset_samples(ps, SampleID=="BEADS_S67")
sample_variables(ps)
# rm taxa that aren't there
any(taxa_sums(ctl) == 0)
ctl<-prune_taxa(taxa_sums(ctl) > 0, ctl)
any(taxa_sums(ctl) == 0)
ntaxa(ctl)
#who are the most abundant taxa?
topN = 20
most_abundant_taxa = sort(taxa_sums(ctl), TRUE)[1:topN]
print(most_abundant_taxa)
ctl20 = prune_taxa(names(most_abundant_taxa), ctl)
length(get_taxa_unique(ctl20, "Family"))
print(get_taxa_unique(ctl20, "Phyla"))
get_taxa_unique(ctl20, "Genus")
get_taxa_unique(ctl20, "Family")
#who is in the nodule?
#subset
nod<-subset_samples(ps, Compartment=="Nodule")
# rm taxa that aren't there
any(taxa_sums(nod) == 0)
nod<-prune_taxa(taxa_sums(nod) > 0, nod)
any(taxa_sums(nod) == 0)
ntaxa(nod)
#who are most abundant taxa
topN = 20
most_abundant_taxa = sort(taxa_sums(nod), TRUE)[1:topN]
print(most_abundant_taxa)
nod20 = prune_taxa(names(most_abundant_taxa), nod)
length(get_taxa_unique(nod20, "Class"))
print(get_taxa_unique(nod20, "Phyla"))
get_taxa_unique(nod20, "Genus")
get_taxa_unique(nod20, "Family")
get_taxa_unique(nod20, "Class")
tax_table(nod20)
######3.------  import percent abundance into phyloseq for figure ----- #####
otus.phyloseq<- t(otus.perc)
#import it phyloseq
Workshop_OTU <- otu_table(as.matrix(otus.phyloseq), taxa_are_rows = FALSE)
Workshop_metadat <- sample_data(metadat)
Workshop_taxo <- tax_table(as.matrix(taxon)) # this taxon file is from the prev phyloseq object length = 14833
ps_perc <- phyloseq(Workshop_taxo, Workshop_OTU,Workshop_metadat)
t(otu_table(ps_perc))
#test it worked
sample_names(ps_perc)
print(ps_perc)
# 14593 taxa
topN = 50
most_abundant_taxa = sort(taxa_sums(ps_perc), TRUE)[1:topN]
print(most_abundant_taxa)
ps_20 = prune_taxa(names(most_abundant_taxa), ps_perc)
length(get_taxa_unique(ps_perc, "Class"))
print(get_taxa_unique(ps_20, "Phyla"))
get_taxa_unique(ps_perc, "Genus")
get_taxa_unique(ps_perc, "Family")
get_taxa_unique(ps_perc, "Class")
tax_table(ps_20)
# top phyla
#" Cyanobacteria"     " Acidobacteriota"   " Armatimonadota"    " Nitrospirota"      " Proteobacteria"    " Gemmatimonadota"   " Chloroflexi"
#" Bacteroidota"      " Actinobacteriota"  " Planctomycetota"   " Verrucomicrobiota" " Myxococcota"       " Bdellovibrionota"
#### 100% plots
Cyanobacteria <- subset_taxa(ps, Phyla ==  " Cyanobacteria"  )
cyano.sum<-rowSums(otu_table(Cyanobacteria))
Acidobacteriota <- subset_taxa(ps, Phyla  == " Acidobacteriota" )
Acido.sum<-rowSums(otu_table(Acidobacteriota))
Armatimonadota <- subset_taxa(ps, Phyla  == " Armatimonadota"  )
Arma.sum<-rowSums(otu_table(Armatimonadota))
Nitrospirota <- subset_taxa(ps, Phyla  == " Nitrospirota"   )
Nitro.sum<-rowSums(otu_table(Nitrospirota))
Proteobacteria  <- subset_taxa(ps, Phyla == " Proteobacteria"  )
Proteo.sum<-rowSums(otu_table(Proteobacteria))
Gemmatimonadota <- subset_taxa(ps, Phyla  ==  " Gemmatimonadota"  )
Gemma.sum<-rowSums(otu_table(Gemmatimonadota))
Chloroflexi <- subset_taxa(ps, Phyla  ==    " Chloroflexi" )
Chloro.sum<-rowSums(otu_table(Chloroflexi))
Bacteroidota  <- subset_taxa(ps, Phyla  ==    " Bacteroidota"  )
Bactero.sum<-rowSums(otu_table(Bacteroidota))
Actinobacteriota  <- subset_taxa(ps, Phyla  ==     " Actinobacteriota"   )
Actino.sum<-rowSums(otu_table(Actinobacteriota ))
Planctomycetota <- subset_taxa(ps, Phyla  ==     " Planctomycetota" )
Planctomycetota.sum<-rowSums(otu_table(Planctomycetota ))
Verrucomicrobiota  <- subset_taxa(ps, Phyla  ==     " Verrucomicrobiota"   )
Verrucomicrobiota.sum<-rowSums(otu_table(Verrucomicrobiota ))
Myxococcota <- subset_taxa(ps, Phyla  ==     " Myxococcota"   )
Myxococcota.sum<-rowSums(otu_table(Myxococcota ))
Bdellovibrionota <- subset_taxa(ps, Phyla  ==      " Bdellovibrionota"   )
Bdellovibrionota.sum<-rowSums(otu_table(Bdellovibrionota ))
#other<-100-(Bdellovibrionota.sum+ Myxococcota.sum+ Verrucomicrobiota.sum + Planctomycetota.sum+ Actino.sum + Bactero.sum +
#            cyano.sum + Acido.sum + Arma.sum + Nitro.sum + Proteo.sum + Gemma.sum + Chloro.sum)
phyl.mat<-cbind(Bdellovibrionota.sum, Myxococcota.sum, Verrucomicrobiota.sum , Planctomycetota.sum, Actino.sum , Bactero.sum ,
cyano.sum , Acido.sum , Arma.sum , Nitro.sum , Proteo.sum , Gemma.sum , Chloro.sum)
phyl.perc<-(phyl.mat/41610)*100
print(phyl.perc)
other <- 100-rowSums(phyl.perc)
phyl.perc<- cbind(phyl.perc, other)
phyl.perc<-as.data.frame(phyl.perc)
phyl.perc<-cbind(metadat, phyl.perc)
# data wrangling
phy.df<-gather(phyl.perc, "taxa", value, 7:20 )
head(phy.df)
df<-phy.df %>% filter(Fraction!="Inactive")
df<-df%>%
group_by(taxa, compartment_BCAT) %>%
summarise(mean = mean(value))
unique(df$compartment_BCAT)
df$compartment_BCAT<-factor(df$compartment_BCAT, levels = c("beadsbeads",
"ctlctl", "Bulk_SoilTotal_DNA",  "RhizosphereTotal_DNA",
"RhizosphereTotal_Cells", "RhizosphereBONCAT_Active" ,"RootsTotal_Cells"
, "RootsBONCAT_Active", "NoduleTotal_Cells"  ,  "NoduleBONCAT_Active"   ))
df<-filter(df, compartment_BCAT!="beadsbeads" & compartment_BCAT!="ctlctl")
# Stacked + percent
svg(file="top_taxa.svg",width = 6, height=5 )
install.packages("viridis")  # Install
library("viridis")
windows()
df%>%
ggplot(aes(fill=taxa, y=mean, x=compartment_BCAT)) +
geom_bar(position="fill", stat= "identity")+
#scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
filter(otu_log2.s, Family ==  "Blastocatellaceae")
filter(otu_log2.s, Family ==  "Blastocatellaceae")
install.packages("viridis")
