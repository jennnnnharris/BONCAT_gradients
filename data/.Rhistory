Acid <- subset_taxa(Workshop.16S, Phylum == "Acidobacteria")
Acid.sum<-rowSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phylum == "Cyanobacteria")
cyano.sum<-rowSums(otu_table(Proteo))
cyano.sum<-rowSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phylum == "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phylum == "Bacteroidetes")
Bact.sum<-rowSums(otu_table(Bact))
Other<-100-(Actino.sum+Proteo.sum+Firmi.sum+Bact.sum+cyano.sum)
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+cyano.sum)
phyl.mat<-cbind(Actino.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum.Other)
phyl.mat<-cbind(Actino.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
phyl.ag<-aggregate(phyl.mat~metadat$siteXflower,FUN=mean)
rownames(phyl.ag)<-phyl.ag[,1]
phyl.ag.2<-as.matrix(phyl.ag[,-1])
phyl.ag.names<-rownames(phyl.ag)
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("black","forestgreen","gold","blue"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("dark_orchid","forestgreen","gold","blue"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("darkorchid","forestgreen","gold","blue"),horiz=FALSE,
ylab="Relative abundance (%)")
phyl.ag.names
hyl.ag.2
phyl.ag.names<-rownames(phyl.ag)
phyl.ag.2<-as.matrix(phyl.ag[,-1])
rownames(phyl.ag)<-phyl.ag[,1]
phyl.ag.2<-as.matrix(phyl.ag[,-1])
phyl.ag.names<-rownames(phyl.ag)
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("darkorchid","forestgreen","gold","blue"),horiz=FALSE,
ylab="Relative abundance (%)")+
#### 4. OTU heatmap ####
## For more options, see: http://www.molecularecologist.com/2013/08/making-heatmaps-with-r-for-microbiome-analysis/ ##
# create colour scale for heatmap
scaleyellowblue <- colorRampPalette(c("lightyellow", "darkblue"), space = "rgb")(100)
phyl.mat
phyl.ag
get_taxa_unique(Workshop.16S, "Phylum")
taxa_sums(get_taxa_unique(Workshop.16S, "Phylum"))
taxa_sums(get_taxa_unique(Workshop_OTU, "Phylum"))
sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
get_taxa_unique(Workshop_16S, "Phylum")
?taxa_sums
Bact.sum
Bact.sum<-rowSums(otu_table(Bact))
Bact <- subset_taxa(Workshop.16S, Phylum == "Bacteroidetes")
Bact.sum
topN = 200
most_abundant_taxa = sort(taxa_sums(Workshop.16S), TRUE)[1:topN]
print(most_abundant_taxa)
GP20 = prune_taxa(names(most_abundant_taxa), Workshop.16S)
length(get_taxa_unique(GP20, "Phylum"))
print(get_taxa_unique(GP20, "Phylum"))
Actino <- subset_taxa(Workshop.16S, Phylum == "Actinobacteria")
Actino.sum<-rowSums(otu_table(Actino))
Proteo <- subset_taxa(Workshop.16S, Phylum == "Proteobacteria")
Proteo.sum<-rowSums(otu_table(Proteo))
Acid <- subset_taxa(Workshop.16S, Phylum == "Acidobacteria")
Acid.sum<-rowSums(otu_table(Acid))
cyano <- subset_taxa(Workshop.16S, Phylum == "Cyanobacteria")
cyano.sum<-rowSums(otu_table(cyano))
Firmi <- subset_taxa(Workshop.16S, Phylum == "Firmicutes")
Firmi.sum<-rowSums(otu_table(Firmi))
Bact <- subset_taxa(Workshop.16S, Phylum == "Bacteroidetes")
Bact.sum<-rowSums(otu_table(Bact))
Other<-100-(Actino.sum+Acid.sum+Firmi.sum+Bact.sum+Proteo.sum+cyano.sum)
phyl.mat<-cbind(Actino.sum,Proteo.sum,Acid.sum,Firmi.sum,Bact.sum,cyano.sum,Other)
phyl.ag<-aggregate(phyl.mat~metadat$siteXflower,FUN=mean)
phyl.mat
phyl.ag<-aggregate(phyl.mat~metadat$siteXflower,FUN=mean)
rownames
rownames(phyl.ag)<-phyl.ag[,1]
phyl.ag.2<-as.matrix(phyl.ag[,-1])
phyl.ag.names<-rownames(phyl.ag)
phyl.ag.2
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("darkorchid","forestgreen","gold","blue"),horiz=FALSE,
ylab="Relative abundance (%)")+
#### 4. OTU heatmap ####
## For more options, see: http://www.molecularecologist.com/2013/08/making-heatmaps-with-r-for-microbiome-analysis/ ##
# create colour scale for heatmap
scaleyellowblue <- colorRampPalette(c("lightyellow", "darkblue"), space = "rgb")(100)
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=clarity,horiz=FALSE,
ylab="Relative abundance (%)")+
#### 4. OTU heatmap ####
## For more options, see: http://www.molecularecologist.com/2013/08/making-heatmaps-with-r-for-microbiome-analysis/ ##
# create colour scale for heatmap
scaleyellowblue <- colorRampPalette(c("lightyellow", "darkblue"), space = "rgb")(100)
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","#dd5182","#ff6e54", "#ffa600"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","#dd5182","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","#dd5182","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","#teal","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","#teal","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","cyan3","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
windows()
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "#955196","cyan3","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#003f5c", "#444e86", "chartreuse2","cyan3","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("#gold", "#444e86", "chartreuse2","cyan3","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("gold", "#444e86", "chartreuse2","cyan3","mediumblue", "navy"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("gold", "#444e86", "chartreuse2","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("cyan3", "#444e86", "chartreuse2","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("cyan3", "blueviolet", "chartreuse2","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "blueviolet", "chartreuse2","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "cyan3", "chartreuse2","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "cornflowerblue", "chartreuse2","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "cornflowerblue", "darkorange","cyan3","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "cornflowerblue", "darkorange","cyan","mediumblue", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
barplot(apply(t(phyl.ag.2),2,rev),names=phyl.ag.names,col=c("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3"),horiz=FALSE,
ylab="Relative abundance (%)")
phyl.ag.names
phyl.ag.2
t(phyl.ag.2
t(phyl.ag.2)
phyl.ag.2
phyl.ag.2
apply(t(phyl.ag.2),2,rev)
phyl.ad.t<- apply(t(phyl.ag.2),2,rev)
phyl.ad.t
?ggplot2
####
# create a dataset
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
data
phyl.ad.t
phyl.ag.2
gather(phyl.ad.t, "taxa", 2:6)
library(tidyverse)
gather(phyl.ad.t, "taxa", 2:6)
phyl.ad.t<- as.data.frame(apply(t(phyl.ag.2),2,rev))
phyl.ad.t
phyl.df<- as.data.frame(apply(t(phyl.ag.2),2,rev))
phyl.df
gather(phyl.df, "taxa", 2:6)
View(phyl.df)
gather(phyl.df, "taxa", value 2:6)
gather(phyl.df, "taxa", value, 2:6)
gather(phyl.df, "taxa", value, 2:5)
phyl.df
phyl.df<- as.data.frame((phyl.ag.2)
phyl.df<- as.data.frame(phyl.ag.2)
phyl.df
phyl.df<- as.data.frame(phyl.ag.2)
phyl.df
phyl.ag.2<-as.matrix(phyl.ag[,-1])
phyl.ag.2
phyl.df<- as.data.frame(phyl.ag.2)
gather(phyl.df, "taxa", value, 2:5)
gather(phyl.df, "taxa", 2:5)
phyl.df
gather(phyl.df, "taxa", 2:7)
gather(phyl.df, "taxa", 2:7)
gather(phyl.df, "taxa",value, 2:7)
gather(phyl.df, "taxa",value, 2:7)
View(phyl.df)
row.names(phyl.ag.2)
phyl.df[,1]<-row.names(phyl.ag.2)
phyl.df
phyl.df
gather(phyl.df, "taxa",value, 2:7)
phyl.df<- as.data.frame(phyl.ag.2)
phyl.df[,8]<-row.names(phyl.ag.2)
phyl.df
gather(phyl.df, "taxa",value, 2:7)
gather(phyl.df, "taxa",value, 1:7)
phy.df.t<-gather(phyl.df, "taxa",value, 1:7)
ggplot(phy.df.t, aes(fill=taxa, y=value, x=v8)) +
geom_bar(position="fill", stat="identity")
phy.df.t<-gather(phyl.df, "taxa",value, 1:7)
phy.df.t
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")
library(viridis)
library(hrbrthemes)
install.packages("viridis")
install.packages("viridis")
install.packages("hrbrthemes")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_viridis(discrete = T) +
ggtitle("Top Phylum") +
theme_ipsum() +
xlab("")
library(tidyverse)
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_viridis(discrete = T) +
ggtitle("Top Phylum") +
theme_ipsum() +
xlab("")
library(ade4)
library(vegan)
library(RColorBrewer)
library(phyloseq)
library(gplots)
library(Heatplus)
library(dplyr)
library(tidyverse)
library(viridis)
library(hrbrthemes)
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_viridis(discrete = T) +
ggtitle("Top Phylum") +
theme_ipsum() +
xlab("")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3") +
ggtitle("Top Phylum") +
theme_bw() +
xlab("")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3") +
ggtitle("Top Phylum") +
themebw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3") +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(c("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3" "black")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("navy", "cornflowerblue", "darkorange","cyan","darkorchid", "azure3", "black")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#1e81b0", "azure3", "#e28743","#eab676","#76b5c5", "#873e23", "#063970")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
ggtitle("Top Phylum") +
theme_bw() +
xlab("site")+
ylab("relative abundance %")
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
ggtitle("Top Phylum") +
theme_bw(base_size = 14) +
xlab("site")+
ylab("relative abundance %")
data(dune)
data(dune.env)
dune
dune.env
otu.perm<- adonis2( OTU.perc~ Site*Flower_type, data = metadat, permutations = 999, method="bray")
otu.perm<- adonis2( otu.perc~ Site*Flower_type, data = metadat, permutations = 999, method="bray")
otu.perm<- adonis2( otus.perc~ Site*Flower_type, data = metadat, permutations = 999, method="bray")
otu.perm
dispersion <- betadisper(otus.dist, group=metadat$Site)
dispersion <- betadisper(otus.bray, group=metadat$Site)
permutest(dispersion)
plot(dispersion, hull=FALSE, ellipse=TRUE) ##sd ellipse
dispersion <- betadisper(otus.bray, group=metadat$Flower_type)
permutest(dispersion)
plot(dispersion, hull=FALSE, ellipse=TRUE) ##sd ellipse
dispersion <- betadisper(otus.bray, group=metadat$siteXflower)
permutest(dispersion)
pairwise.adonis
otu.perm<- adonis2( otus.perc~ Site*Flower_type, data = metadat, permutations = 999, method="bray")
otu.ano<- anosim(otus.perc~ Site*Flower_type, data = metadat, permutations = 999, method="bray")
otu.ano<- anosim(otus.perc, grouping =  metadat$Flower_type, permutations = 999, method="bray")
otu.ano<- anosim(otus.perc, grouping =  metadat$Flower_type, permutations = 99)
otu.ano
otu.ano<- anosim(otus.perc, grouping =  metadat$Flower_type, permutations = 999)
otu.ano
summary(otu.ano)
otu.ano<- anosim(otus.perc, grouping =  metadat$siteXflower, permutations = 999)
summary(otu.ano)
otu.perm<- adonis2( otus.perc~ Site, data = metadat, permutations = 999, method="bray")
otu.ano<- anosim(otus.perc, grouping =  metadat$flower, permutations = 999)
otu.ano<- anosim(otus.perc, grouping =  metadat$Site, permutations = 999)
summary(otu.ano)
# regular anova
aov(otus.div ~metadat$siteXflower)
otus.div
# regular anova
aov(otus.div ~metadat$Flower_type)
# regular anova
anv<-aov(otus.div ~metadat$Flower_type)
summary(anv)
# regular anova
anv<-aov(otus.div ~metadat$Flower_type*metadat$Site)
summary(anv)
TukeyHSD(anv, metadat$Flower_type)
TukeyHSD(anv, metadat$Flower_type, conf.level = .95)
summary(tkey)
tkey<-TukeyHSD(anv, metadat$Flower_type, conf.level = .95)
summary(tkey)
?TukeyHSD
tkey<-TukeyHSD(anv, conf.level = .95)
summary(tkey)
tkey<-TukeyHSD(anv, 'metadat$Site', conf.level = .95)
tkey<-TukeyHSD(anv, metadat$Site, conf.level = .95)
tkey<-TukeyHSD(anv, unique(metadat$Site), conf.level = .95)
summary(tkey)
tkey<-TukeyHSD(anv, conf.level = .95)
TukeyHSD(anv, conf.level = .95)
sp<-specpool(otus.perc,metadat$siteXflower)
windows()
anv<-aov(sp ~metadat$Flower_type*metadat$Site)
summary(anv)
TukeyHSD(anv, conf.level = .95)
o
windows(title="PCoA on OTUs - Bray Curtis")
ordiplot(otus.pcoa,choices=c(1,2), type="none", main="PCoA of 16S OTU Bray Curtis",xlab=paste("PCoA1 (",round(pe1,2),"% variance explained)"),
ylab=paste("PCoA2 (",round(pe2,2),"% variance explained)"))
points(otus.p, col=c("black"),pch=c(22,23)[as.factor(metadat$Flower_type)],lwd=1,cex=2,
bg=c("darkorchid1","darkolivegreen1", "cornflowerblue", "darkolivegreen4", "blue4")[as.factor(metadat$siteXflower)])
legend(locator(1),legend=c("Site 1 True Flower", "Site 2 True Flower", "Site 3 True Flower", "Site 1 Psuedoflower", "Site 2 Psuedoflower"),
pch=c(22,22,24, 23,23), cex=0.8, col=c("darkorchid1","cornflowerblue", "blue4", "darkolivegreen1", "darkolivegreen2"))
windows()
boxplot((otus.div) ~ as.factor(metadat$siteXflower), main="Shannon Diversity, Site X flowertype",
ylab="Shannon Diversity", xlab = "sample",col= c("darkorchid1","darkolivegreen1", "cornflowerblue", "darkolivegreen4", "blue4"), varwidth=FALSE)
windows()
barplot(sp$chao,names.arg =rownames(sp),ylab="Chao Index", col = c("darkorchid1","darkolivegreen1", "cornflowerblue", "darkolivegreen4", "blue4"))
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
ggtitle("Top Phylum") +
theme_bw(base_size = 14) +
xlab("site")+
ylab("relative abundance %")
# Stacked + percent
windows()
ggplot(phy.df.t, aes(fill=taxa, y=value, x=V8)) +
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values= c("#26808f","#6499b5", "#9db1d3","#d1cbe9", "#d2a0d0","#dc6e9c","#d43d51")) +
ggtitle("Top Phylum") +
theme_bw(base_size = 14) +
xlab("site")+
ylab("relative abundance %")
taxon <- read.table("asv_table/taxonomy.tsv", sep="\t", header=T, row.names=1)
otus <- read.table("asv_table/feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- readxl::read_excel("metadata.xlsx")
## Transpose OTU table ##
otus.t <- t(otus)
## order metadata
metadat<-metadat[order(metadat$sample_id),]
## order otu table
otu.t<-otus.t[order(row.names(otus.t)),]
min(rowSums(otus.t))
cite vegan
cite(vegan)
library(vegan)
library(vegan)
cite(vegan)
citation("vegan")
citation("dada2")
TukeyHSD(anv, conf.level = .95)
setwd("~/Spring2022/PPEM440/assignment3")
rm(list=ls())
library(ade4)
library(vegan)
library(RColorBrewer)
library(phyloseq)
library(gplots)
library(Heatplus)
library(dplyr)
library(tidyverse)
library(viridis)
library(hrbrthemes)
taxon <- read.table("asv_table/taxonomy.tsv", sep="\t", header=T, row.names=1)
otus <- read.table("asv_table/feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- readxl::read_excel("metadata.xlsx")
## Transpose OTU table ##
otus.t <- t(otus)
## order metadata
metadat<-metadat[order(metadat$sample_id),]
## order otu table
otu.t<-otus.t[order(row.names(otus.t)),]
min(rowSums(otus.t))
set.seed(336)
otus.r<-rrarefy(otus.t,8396)
otus.perc<-otus.r/rowSums(otus.r)*100
# Calculate Bray-Curtis distance between samples
otus.bray <- vegdist(otus.perc, method = "bray")
# Perform PCoA analysis of BC distances #
otus.pcoa <- cmdscale(otus.bray, k=(nrow(otus.perc)-1), eig=TRUE)
# Store coordinates for first two axes in new variable #
otus.p <- otus.pcoa$points[,1:2]
otus.eig<-otus.pcoa$eig
perc.exp<-otus.eig/(sum(otus.eig))*100
pe1<-perc.exp[1]
pe2<-perc.exp[2]
metadat<-mutate(metadat, siteXflower = paste0(metadat$Site, metadat$Flower_type))
windows(title="PCoA on OTUs - Bray Curtis")
otus.div<-diversity(otus.perc, index="shannon")
windows()
boxplot((otus.div) ~ as.factor(metadat$siteXflower), main="Shannon Diversity, Site X flowertype",
ylab="Shannon Diversity", xlab = "sample",col= c("darkorchid1","darkolivegreen1", "cornflowerblue", "darkolivegreen4", "blue4"), varwidth=FALSE)
# regular anova
anv<-aov(otus.div ~metadat$Flower_type*metadat$Site)
summary(anv)
TukeyHSD(anv, conf.level = .95)
citation()
citation(phyloseq())
citation(phyloseq
)
citation("phyloseq")
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/analysis")
setwd("~/setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data/16s")
### Clear workspace ###
rm(list=ls())
## if trouble loading phyloseq, see: http://joey711.github.io/phyloseq/install
#source("http://bioconductor.org/biocLite.R")
#biocLite("Heatplus")
### Load required libraries ###
library(ade4)
library(vegan)
library(RColorBrewer)
library(phyloseq)
library(gplots)
library(Heatplus)
library(dplyr)
library(tidyverse)
library(viridis)
library(hrbrthemes)
### Import Data ###
taxon <- read.table("asv_table/taxonomy.tsv", sep="\t", header=T, row.names=1)
otus <- read.table("asv_table/feature-table.tsv", sep="\t", header=T, row.names = 1 )
metadat <- readxl::read_excel("metadata.xlsx")
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data/16s")
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data/16s")
setwd("C:/Users/Jenn/OneDrive - The Pennsylvania State University/Documents/Github/BONCAT_gradients/data")
rm(list=ls())
library(ade4)
library(vegan)
library(RColorBrewer)
library(ade4)
library(vegan)
library(RColorBrewer)
library(phyloseq)
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
source('http://bioconductor.org/biocManager.R')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager('phyloseq')
BiocLite('phyloseq')
?BiocManger
BiocManager::install("phyloseq")
library(phyloseq)
library(gplots)
library(Heatplus)
library(dplyr)
library(tidyverse)
library(viridis)
library(hrbrthemes)
